input {
  beats {
    port => 5044
  }
}
filter {

  mutate {
    remove_tag => ["beats_input_codec_plain_applied"]
    remove_tag => ["beats_input_raw_event"]
  }
  if [event][module] == "suricata" {
    # No filtering for Suricata
    if [suricata][eve][ftp][completion_code][0] == "530" {
      mutate {
        add_tag => ["Failed FTP Login"]
      }
    }
  }
  else if [event][dataset] == "system.auth" {
    # SSH logs
    if [message] =~ "Failed password" {
      mutate {
        add_tag => ["failed_ssh_login"]
      }
      grok {
        match =>  {"message" => "%{TIMESTAMP_ISO8601:timestamp} %{HOSTNAME:system} sshd\[%{NUMBER:process_id}\]: Failed password for %{DATA:user_status} %{USERNAME:username} from %{IP:source_ip} port %{NUMBER:source_port} ssh2" }
      }
      mutate {
        add_field => {
          "[event][type]" => "authentication_failure"
          "[event][category]" => "authentication"
          "[event][outcome]" => "failure"
        }
      }
    }
  }
}
output {
  elasticsearch {
    hosts => ["192.168.1.82:9200"]
    index => "%{[event][module]}-%{+YYYY.MM.dd}"
    user => "elastic"
    password => "elastic-password"
  }
}
